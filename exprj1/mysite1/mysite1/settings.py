"""
Django settings for mysite1 project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2^z0d(4n%khmv=@4tgtv0)^1i5cs^$r69zl613gx@c%bleur4q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # PollsConfig 클래스의 경로 표현을 유의해서 추가한다.
    'polls.apps.PollsConfig',  # 추가
    'django.contrib.admin',  # 관리용 사이트
    'django.contrib.auth',  # 인증 시스템
    'django.contrib.contenttypes',  # 컨텐츠 타입을 위한 프레임워크
    'django.contrib.sessions',  # 세션 프레임워크
    'django.contrib.messages',  # 메세징 프레임워크
    'django.contrib.staticfiles',  # 정적 파일을 관리한느 프레임워크
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],   # 프로젝트 템플릿 파일 위치한 디렉토리를 지정
        'APP_DIRS': True,  # 앱의 템플릿 디렉토리에서 파일을 찾을 것인지 여부를 지정
                           # 디폴트값은 False 이지만 startproject 명에 의해서 setting.py 파일이 만들어질 때 True로 설정됨

        # 템플릿 엔진에 따라 해당하는 옵션들을 설정하는 항목
        # [장고 템플릿 엔진을 사용하는 경우의 옵션 항목]
        # context_processors : 웹 요청에 들어있는 파라미터들을 인자로 받아서 컨텍스트 데이터로 사용될 dict을 만들어 주는 호출 가능한 객체 지정. 디폴트는 비어있는 리스트
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        # 'django.db.backends.postgresql', 'django.db.backends.mysql', 또는 'django.db.backends.oracle'
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
